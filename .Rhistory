aux$situação <- factor(aux$situação, levels = rev(levels(as.factor(aux$situação))))
a <- ggplot() +
geom_bar(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = percent, fill = as.factor(situação)), stat = "identity", color = "black") +
scale_fill_manual(values = c("orange", "red", "green")) +
geom_text(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = pos, label = paste0(round(percent, 1),"%")), vjust = 2, color = "black", size = 3) +
geom_text(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = pos-2.5, label = paste0("n = ",n)), vjust = 2, color = "black", size = 2.5) +
scale_y_continuous(breaks = round(seq(0, 100, by = 10),1)) +
xlab("Semestre - Ano") + ylab("Percentual de Alunos") + labs(fill = "Situação") +
theme(legend.position = "bottom", axis.line = element_line(size = 1, colour = "black"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank(),
plot.title=element_text(hjust = 0.5),
axis.text.x=element_text(colour = "black", angle = 45, size = 9, hjust = 1),
axis.text.y=element_text(colour = "black", size = 10))
aux <- statistics(all_data_II[all_data_II$componente.curricular == "DESENHO TECNICO II",], "MEDIA_FINAL", ano, periodo, componente.curricular)
b <- ggplot() +
geom_bar(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = n), stat = "identity", color = "black") +
geom_text(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = n, label = n), vjust = 2, color = "black", size = 4) +
scale_y_continuous(breaks = seq(0, 60, by = 10)) +
ylab("Número de Alunos") +
ggtitle("Situação de Alunos por Período e Ano em Desenho Técnico II") +
theme(legend.position = "bottom", axis.line = element_line(size = 1, colour = "black"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank(),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank()) +
aes(fill = I("darkseagreen2"))
ggarrange(b, a, nrow = 2, heights=c(1, 4))
aux <- statistics(all_data_II[all_data_II$componente.curricular == "DESENHO TECNICO II",], "MEDIA_FINAL", ano, periodo, situação)
aux <- as.data.frame(aux %>%
group_by(ano, periodo) %>%
mutate(percent = 100*round(n/sum(n),8),
pos = 4.4 + (round(cumsum(percent) - (0.5 * percent), 8))
)
)
aux$periodo[aux$periodo == "1. Semestre"] <- "1 -"
aux$periodo[aux$periodo == "2. Semestre"] <- "2 -"
aux$situação <- factor(aux$situação, levels = rev(levels(as.factor(aux$situação))))
a <- ggplot() +
geom_bar(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = percent, fill = as.factor(situação)), stat = "identity", color = "black") +
scale_fill_manual(values = c("orange", "red", "green")) +
geom_text(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = pos, label = paste0(round(percent, 1),"%")), vjust = 2, color = "black", size = 3) +
geom_text(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = pos-2.5, label = paste0("n = ",n)), vjust = 2, color = "black", size = 2.5) +
scale_y_continuous(breaks = round(seq(0, 100, by = 10),1)) +
xlab("Semestre - Ano") + ylab("Percentual de Alunos") + labs(fill = "Situação") +
theme(legend.position = "bottom", axis.line = element_line(size = 1, colour = "black"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank(),
plot.title=element_text(hjust = 0.5),
axis.text.x=element_text(colour = "black", angle = 45, size = 9, hjust = 1),
axis.text.y=element_text(colour = "black", size = 10))
aux <- statistics(all_data_II[all_data_II$componente.curricular == "DESENHO TECNICO II",], "MEDIA_FINAL", ano, periodo, componente.curricular)
b <- ggplot() +
geom_bar(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = n), stat = "identity", color = "black") +
geom_text(data = aux, aes(x = interaction(as.factor(periodo), as.factor(ano)), y = n, label = n), vjust = 2, color = "black", size = 4) +
scale_y_continuous(breaks = seq(0, 60, by = 10)) +
ylab("Número de Alunos") +
ggtitle("Situação de Alunos por Período e Ano em Desenho Técnico II") +
theme(legend.position = "bottom", axis.line = element_line(size = 1, colour = "black"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank(),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank()) +
aes(fill = I("darkseagreen2"))
ggarrange(b, a, nrow = 2, heights=c(1, 4))
View(all_data)
View(all_data_without_frequency_dropout)
View(all_data_II)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = MEDIA_FINAL, y = faltas)) +
geom_point()+
geom_smooth(method=lm)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point()+
geom_smooth(method=lm)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL, color = situação)) +
geom_point()+
geom_smooth(method=lm)
View(all_data_II)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL, color = curso)) +
geom_point()+
geom_smooth(method=lm)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point()+
geom_smooth(method=lm)+
stat_ellipse()
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
geom_smooth(method = lm)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
geom_smooth(method = lm) +
geom_jitter()
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
geom_smooth(method = lm) +
geom_jitter()
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 15, by = 1)) +
geom_smooth(method = lm) +
geom_jitter()
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II[all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 15, by = 1)) +
ylab("Média Final") +
geom_smooth(method = lm) +
geom_jitter()
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II[all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 15, by = 1)) +
ylab("Média Final") +
geom_smooth(method = lm) +
geom_jitter()
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 15, by = 1)) +
ylab("Média Final") +
geom_smooth(method = lm) +
geom_jitter()
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 15, by = 1)) +
ylab("Média Final") +
geom_smooth(method = lm)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 15, by = 1)) +
ylab("Média Final") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 16, by = 4)) +
ylab("Média Final") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO II",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 16, by = 4)) +
ylab("Média Final") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO II",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 16, by = 2)) +
ylab("Média Final") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 16, by = 4)) +
ylab("Média Final") +
ggtitle("Desenho Técnico I") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO II",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 16, by = 2)) +
ylab("Média Final") +
ggtitle("Desenho Técnico II") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25)
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO I",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 16, by = 4)) +
ylab("Média Final") +
ggtitle("Desenho Técnico I") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25) +
theme(plot.title=element_text(hjust = 0.5))
ggplot(all_data_II[all_data_II$situação!="Reprovado por Frequência" & all_data_II$componente.curricular == "DESENHO TECNICO II",], aes(x = faltas, y = MEDIA_FINAL)) +
geom_point() +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +
scale_x_continuous(breaks = seq(0, 16, by = 2)) +
ylab("Média Final") +
ggtitle("Desenho Técnico II") +
geom_smooth(method = lm) +
geom_jitter(width = 0.25) +
theme(plot.title=element_text(hjust = 0.5))
View(all_data_II)
all_data_II$periodo[all_data_II$periodo == "1. Semestre"] <- 1
all_data_II$periodo[all_data_II$periodo == "2. Semestre"] <- 2
all_data_II$periodo <- as.numeric(all_data_II$periodo)
dfII_without_dropout$periodo[dfII_without_dropout$periodo == "1. Semestre"] <- 1
dfII_without_dropout$periodo[dfII_without_dropout$periodo == "2. Semestre"] <- 2
dfII_without_dropout$periodo <- as.numeric(dfII_without_dropout$periodo)
dfII_without_dropout$ano <- as.factor(dfII_without_dropout$ano)
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",]))
shapiro.test(res)
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",]))
View(dfII_without_dropout)
residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",]))
dfII_without_dropout[dfII_without_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",]
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",]))
shapiro.test(res)
hist(res)
max(aggregate(MEDIA_FINAL ~ ano + periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], var)$MEDIA_FINAL)/min(aggregate(MEDIA_FINAL ~ ano + periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], var)$MEDIA_FINAL)
leveneTest(MEDIA_FINAL ~ ANO, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
leveneTest(MEDIA_FINAL ~ PERIODO, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
leveneTest(MEDIA_FINAL ~ ANO * PERIODO, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
leveneTest(MEDIA_FINAL ~ ano, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
leveneTest(MEDIA_FINAL ~ periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
leveneTest(MEDIA_FINAL ~ ano * periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
dfII_without_dropout$periodo[dfII_without_dropout$periodo == "1. Semestre"] <- 1
dfII_without_dropout$periodo[dfII_without_dropout$periodo == "2. Semestre"] <- 2
dfII_without_dropout$periodo <- as.factor(dfII_without_dropout$periodo)
dfII_without_dropout$ano <- as.factor(dfII_without_dropout$ano)
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",]))
shapiro.test(res)
max(aggregate(MEDIA_FINAL ~ ano + periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], var)$MEDIA_FINAL)/min(aggregate(MEDIA_FINAL ~ ano + periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], var)$MEDIA_FINAL)
leveneTest(MEDIA_FINAL ~ ano, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
leveneTest(MEDIA_FINAL ~ periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
leveneTest(MEDIA_FINAL ~ ano * periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
statistics(dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], "MEDIA_FINAL", ano, periodo)
statistics(dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], "MEDIA_FINAL", periodo)
statistics(dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], "MEDIA_FINAL", ano)
kruskal.test(MEDIA_FINAL ~ ano, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
kruskal.test(MEDIA_FINAL ~ periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
kruskal.test(MEDIA_FINAL ~ interaction(ano, periodo), dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
densityplot(~ MEDIA_FINAL | ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | ano*periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
multiVDA(MEDIA_FINAL ~ ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
dfII_without_dropout$ano
dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",]
multiVDA(MEDIA_FINAL ~ periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ as.numeric(ano), data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ as.factor(ano), data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
View(dfII_without_dropout)
nlevels(dfII_without_dropout$ano[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I"])
nlevels(dfII_without_dropout$ano)
class(dfII_without_dropout$ano)
library(coin)
multiVDA(MEDIA_FINAL ~ as.factor(ano), data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ SEXO, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ curso, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",])
statistics(dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], "MEDIA_FINAL", curso)
statistics(dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], "MEDIA_FINAL", SEXO)
options("scipen"=100, "digits"=4)
PT = dunnTest(MEDIA_FINAL ~ ano,
data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",],
method = "bh")
cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE)
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))
shapiro.test(res)
hist(res)
hist(log(res))
anova(aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))
anova(aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))
anova(aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))$residuals
anova(aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))$residual
anova(aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))$results
nn <- anova(aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))
residuals(nn)
?anova
?aov
aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])$residuals
hist(aov(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])$residuals)
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",]))
shapiro.test(res)
max(aggregate(MEDIA_FINAL ~ ano + periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], var)$MEDIA_FINAL)/min(aggregate(MEDIA_FINAL ~ ano + periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], var)$MEDIA_FINAL)
leveneTest(MEDIA_FINAL ~ ano, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
leveneTest(MEDIA_FINAL ~ periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
leveneTest(MEDIA_FINAL ~ ano * periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
kruskal.test(MEDIA_FINAL ~ ano, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
kruskal.test(MEDIA_FINAL ~ periodo, dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
kruskal.test(MEDIA_FINAL ~ interaction(ano, periodo), dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]
)
densityplot(~ MEDIA_FINAL | ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | ano*periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], xlab = "Média Final", ylab = "Densidade de Médias")
multiVDA(MEDIA_FINAL ~ periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
multiVDA(MEDIA_FINAL ~ SEXO, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
multiVDA(MEDIA_FINAL ~ curso, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",])
options("scipen"=100, "digits"=4)
PT = dunnTest(MEDIA_FINAL ~ ano,
data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",],
method = "bh")
cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE)
plot(aov_result, 1)
aov_result <- aov(MEDIA_FINAL ~ ANO * PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
shapiro.test(residuals(aov_result))
hist(res, ,main="Histogram of residuals",xlab="Residuals")
plot(aov_result, 1)
BAEA <- read.csv("csv/Technical_Drawing_I_II - BAEA.csv",sep=";", stringsAsFactors=FALSE, encoding = "Latin-1")
BAEE <- read.csv("csv/Technical_Drawing_I_II - BAEE.csv",sep=";", stringsAsFactors=FALSE, encoding = "Latin-1")
BAEC <- read.csv("csv/Technical_Drawing_I_II - BAEC.csv",sep=";", stringsAsFactors=FALSE, encoding = "Latin-1")
BAEP <- read.csv("csv/Technical_Drawing_I_II - BAEP.csv",sep=";", stringsAsFactors=FALSE, encoding = "Latin-1")
BAEQ <- read.csv("csv/Technical_Drawing_I_II - BAEQ.csv",sep=";", stringsAsFactors=FALSE, encoding = "Latin-1")
BALF <- read.csv("csv/Technical_Drawing_I_II - BALF.csv",sep=";", stringsAsFactors=FALSE, encoding = "Latin-1")
BAEA <- BAEA[,-10]
colnames(BAEC)[10] <- "TOTAL_CARGA_HORARIA"
all_data <- rbind(BAEA, BAEE)
all_data <- rbind(all_data, BAEC)
all_data <- rbind(all_data, BAEP)
all_data <- rbind(all_data, BAEQ)
all_data <- rbind(all_data, BALF)
all_data$NOME_PESSOA[is.na(all_data$NOME_PESSOA)]
all_data$NOME_PESSOA[all_data$NOME_PESSOA == ""]
all_data$MATR_ALUNO[is.na(all_data$MATR_ALUNO)]
all_data$MATR_ALUNO[all_data$NOME_PESSOA == ""]
all_data$COD_CURSO[is.na(all_data$COD_CURSO)]
all_data$COD_CURSO[all_data$COD_CURSO == ""]
unique(all_data$COD_CURSO)
all_data$ANO[is.na(all_data$ANO)]
all_data$ANO <- as.numeric(all_data$ANO)
unique(all_data$ANO)
all_data$PERIODO[is.na(all_data$PERIODO)]
all_data$PERIODO[all_data$PERIODO == ""]
unique(all_data$PERIODO)
all_data$COD_ATIV_CURRIC[is.na(all_data$COD_ATIV_CURRIC)]
all_data$COD_ATIV_CURRIC[all_data$COD_ATIV_CURRIC == ""]
unique(all_data$COD_ATIV_CURRIC)
all_data$NOME_ATIV_CURRIC[is.na(all_data$NOME_ATIV_CURRIC)]
all_data$NOME_ATIV_CURRIC[all_data$NOME_ATIV_CURRIC == ""]
unique(all_data$NOME_ATIV_CURRIC)
all_data$CREDITOS <- as.numeric(all_data$CREDITOS)
all_data$CREDITOS[is.na(all_data$CREDITOS)]
unique(all_data$CREDITOS)
all_data$MEDIA_FINAL <- as.numeric(all_data$MEDIA_FINAL)
all_data$MEDIA_FINAL[is.na(all_data$MEDIA_FINAL)]
all_data$MEDIA_FINAL[all_data$MEDIA_FINAL > 10 | all_data$MEDIA_FINAL < 0]
all_data$MEDIA_FINAL[all_data$MEDIA_FINAL > 10 | all_data$MEDIA_FINAL < 0] <- 0
all_data$DESCR_SITUACAO[all_data$DESCR_SITUACAO == ""]
all_data$DESCR_SITUACAO[is.na(all_data$DESCR_SITUACAO)]
unique(all_data$DESCR_SITUACAO)
all_data$TOTAL_CARGA_HORARIA <- as.numeric(all_data$TOTAL_CARGA_HORARIA)
all_data[is.na(all_data$TOTAL_CARGA_HORARIA),]
all_data$TOTAL_CARGA_HORARIA[is.na(all_data$TOTAL_CARGA_HORARIA)] <- 60
unique(all_data$TOTAL_CARGA_HORARIA)
all_data$FORMA_INGRESSO[all_data$FORMA_INGRESSO == ""]
all_data$FORMA_INGRESSO[is.na(all_data$FORMA_INGRESSO)]
unique(all_data$FORMA_INGRESSO)
all_data$ANO_INGRESSO <- as.numeric(all_data$ANO_INGRESSO)
all_data$ANO_INGRESSO[is.na(all_data$ANO_INGRESSO)]
unique(all_data$ANO_INGRESSO)
all_data$FORMA_EVASAO[all_data$FORMA_EVASAO == ""]
all_data$FORMA_EVASAO[is.na(all_data$FORMA_EVASAO)]
unique(all_data$FORMA_EVASAO)
all_data$ANO_EVASAO <- as.numeric(all_data$ANO_EVASAO)
all_data$ANO_EVASAO[is.na(all_data$ANO_EVASAO)]
all_data$ANO_EVASAO[is.na(all_data$ANO_EVASAO)] <- 0
unique(all_data$ANO_EVASAO)
all_data <- all_data[all_data$DESCR_SITUACAO != "Dispensado sem nota",]
all_data <- all_data[!(all_data$DESCR_SITUACAO == "Aproveitamento" & all_data$MEDIA_FINAL == 0),]
all_data <- all_data[!(all_data$DESCR_SITUACAO == "Trancamento parcial"),]
all_data <- all_data[!(all_data$DESCR_SITUACAO == "Matrícula"),]
all_data <- all_data[!(all_data$DESCR_SITUACAO == "Disciplina Não Concluída"),]
unique(all_data$FORMA_EVASAO)
all_data$FORMA_EVASAO[(all_data$FORMA_EVASAO == "Transf. Interna Por Reopção de Curso")] <- "Reopção"
all_data$FORMA_EVASAO[(all_data$FORMA_EVASAO == "Transferência Interna")] <- "Transf. Interna"
frequency_dropout_data <- all_data[(all_data$DESCR_SITUACAO == "Reprovado por Frequência"),]
all_data$PERIODO[all_data$PERIODO == "1. Semestre"] <- 1
all_data$PERIODO[all_data$PERIODO == "2. Semestre"] <- 2
all_data$PERIODO <- as.numeric(all_data$PERIODO)
aov_result <- aov(MEDIA_FINAL ~ ANO * PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
shapiro.test(residuals(aov_result))
hist(res, ,main="Histogram of residuals",xlab="Residuals")
plot(aov_result, 1)
aov_result <- aov(MEDIA_FINAL ~ ANO , data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
shapiro.test(residuals(aov_result))
hist(res, ,main="Histogram of residuals",xlab="Residuals")
plot(aov_result, 1)
View(all_data)
aov_result <- aov(MEDIA_FINAL ~ ANO * PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
shapiro.test(residuals(aov_result))
hist(res, ,main="Histogram of residuals",xlab="Residuals")
plot(aov_result, 1)
aov_result <- aov(MEDIA_FINAL ~ ANO * PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
shapiro.test(residuals(aov_result))
hist(res, ,main="Histogram of residuals",xlab="Residuals")
densityplot(~ MEDIA_FINAL | ANO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], xlab = "Distribuição de Médias por Ano (Desenho Técnico I)", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | as.factor(PERIODO), data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], ylab = "Densidade de Médias", xlab = "Distribuição de Médias por Semestre (Desenho Técnico I)")
densityplot(~ MEDIA_FINAL | ANO*as.factor(PERIODO), data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], xlab = "Distribuição de Médias por Ano e Semestre (Desenho Técnico I)", ylab = "Densidade de Médias")
all_data$PERIODO[all_data$PERIODO == "1. Semestre"] <- 1
all_data$PERIODO[all_data$PERIODO == "2. Semestre"] <- 2
all_data$PERIODO <- as.factor(all_data$PERIODO)
all_data$ANO <- as.factor(all_data$ANO)
aov_result <- aov(MEDIA_FINAL ~ ANO * PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
shapiro.test(residuals(aov_result))
hist(res, ,main="Histogram of residuals",xlab="Residuals")
#plot(aov_result, 1)
max(aggregate(MEDIA_FINAL ~ ANO + PERIODO, all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], var)$MEDIA_FINAL)/min(aggregate(MEDIA_FINAL ~ ANO + PERIODO, all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], var)$MEDIA_FINAL)
leveneTest(MEDIA_FINAL ~ ANO, all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], center = median)
leveneTest(MEDIA_FINAL ~ PERIODO, all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], center = median)
leveneTest(MEDIA_FINAL ~ ANO * PERIODO, all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], center = median)
kruskal.test(MEDIA_FINAL ~ ANO, all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
kruskal.test(MEDIA_FINAL ~ PERIODO, all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
kruskal.test(MEDIA_FINAL ~ interaction(ANO, PERIODO), all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
densityplot(~ MEDIA_FINAL | PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], ylab = "Densidade de Médias", xlab = "Distribuição de Médias por Semestre (Desenho Técnico I)")
densityplot(~ MEDIA_FINAL | PERIODO * ANO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], xlab = "Distribuição de Médias por Ano e Semestre (Desenho Técnico I)", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | ANO * PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], xlab = "Distribuição de Médias por Ano e Semestre (Desenho Técnico I)", ylab = "Densidade de Médias")
?densityplot
plot(cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE))
options("scipen"=100, "digits"=4)
PT = dunnTest(MEDIA_FINAL ~ ANO,
data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",],
method = "bh")
cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE)
PT = dunnTest(MEDIA_FINAL ~ ANO,
data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",],
method = "bh")
O <- cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE)
ggplot2(o,aes(x = group, y = Letter))
ggplot(o,aes(x = group, y = Letter))
ggplot(O,aes(x = group, y = Letter))
ggplot(O,aes(x = Group, y = Letter))
ggplot(O,aes(x = Group, y = Letter)) + geom_point()
ggplot(O, aes(x = Letter, y = Group)) + geom_point()
ggplot(O, aes(x = Letter, y = Group)) + geom_bar()
ggplot(O, aes(x = Letter, y = Group)) + geom_point()
ggplot(O, aes(x = Letter, y = Group)) + geom_point(size = 4)
ggplot(O, aes(x = Letter, y = Group, fill = Letter)) + geom_point(size = 4)
ggplot(O, aes(x = Letter, y = Group, fill = Letter, color = Letter)) + geom_point(size = 4)
all_data_without_frequency_dropout$PERIODO[all_data_without_frequency_dropout$PERIODO == "1. Semestre"] <- 1
all_data_without_frequency_dropout$PERIODO[all_data_without_frequency_dropout$PERIODO == "2. Semestre"] <- 2
all_data_without_frequency_dropout$PERIODO <- as.factor(all_data_without_frequency_dropout$PERIODO)
all_data_without_frequency_dropout$ANO <- as.factor(all_data_without_frequency_dropout$ANO)
res = residuals(lm(MEDIA_FINAL ~ ANO * PERIODO, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",]))
shapiro.test(res)
hist(res, ,main="Histogram of residuals",xlab="Residuals")
densityplot(~ MEDIA_FINAL | ANO, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | PERIODO, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | ANO * PERIODO, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
options("scipen"=100, "digits"=4)
PT = dunnTest(MEDIA_FINAL ~ ANO,
data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",],
method = "bh")
O <- cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE)
ggplot(O, aes(x = Letter, y = Group, fill = Letter, color = Letter)) + geom_point(size = 4)
PT
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",]))
shapiro.test(res)
# p-value < 0.05 : H0 Rejected, the evidence that residuals distribution do not follow a normal distribution is statistically significant.
# Result: Residuals have a not normal distribution.
hist(res)
densityplot(~ MEDIA_FINAL | ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
hist(res)
densityplot(~ MEDIA_FINAL | ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | ano*periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",], xlab = "Média Final", ylab = "Densidade de Médias")
options("scipen"=100, "digits"=4)
PT = dunnTest(MEDIA_FINAL ~ ano,
data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO I",],
method = "bh")
O <- cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE)
ggplot(O, aes(x = Letter, y = Group, fill = Letter, color = Letter)) + geom_point(size = 4)
res = residuals(lm(MEDIA_FINAL ~ ano * periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",]))
shapiro.test(res)
# p-value < 0.05 : H0 Rejected, the evidence that residuals distribution do not follow a normal distribution is statistically significant.
# Result: Residuals have a not normal distribution.
hist(res)
densityplot(~ MEDIA_FINAL | ano, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], xlab = "Média Final", ylab = "Densidade de Médias")
densityplot(~ MEDIA_FINAL | ano*periodo, data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",], xlab = "Média Final", ylab = "Densidade de Médias")
options("scipen"=100, "digits"=4)
PT = dunnTest(MEDIA_FINAL ~ ano,
data = dfII_without_dropout[dfII_without_dropout$componente.curricular == "DESENHO TECNICO II",],
method = "bh")
O <- cldList(P.adj ~ Comparison,
data = PT$res,
threshold = 0.05,
remove.zero = FALSE)
ggplot(O, aes(x = Letter, y = Group, fill = Letter, color = Letter)) + geom_point(size = 4)
multiVDA(MEDIA_FINAL ~ PERIODO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ SEX, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ COD_CURSO, data = all_data[all_data$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ ANO, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ PERIODO, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ SEX, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
multiVDA(MEDIA_FINAL ~ COD_CURSO, data = all_data_without_frequency_dropout[all_data_without_frequency_dropout$NOME_ATIV_CURRIC == "DESENHO TECNICO I",])
